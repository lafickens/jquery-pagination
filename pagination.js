// Generated by CoffeeScript 1.9.3
(function() {
  var Pagination;

  Pagination = (function() {
    function Pagination(options) {
      this.options = options;
      this.remote = options.remote;
      this.url = this.remote ? options.url : '';
      this.values = options.values ? options.values : [];
      this.method = options.method ? options.method : 'GET';
      this.width = options.width;
      this.height = options.height;
      this.limit = options.limit;
      this.headerRow = options.headerRow;
      this.buttons = options.buttons ? options.buttons : {};
      this.maxPage = Math.ceil(this.values.length / this.limit) === 0 ? 1 : Math.ceil(this.values.length / this.limit);
      this.pageIds = [];
      this.buttonIds = [];
      if (this.remote) {
        retrieve();
      }
    }

    Pagination.prototype.getStartingIndex = function(pageNum) {
      return (pageNum - 1) * this.limit;
    };

    Pagination.prototype.retrieve = function() {
      return $.ajax({
        url: this.url,
        method: this.method,
        success: function(data, textStatus, jqXHR) {
          this.values = data;
          this.maxPage = Math.ceil(data.length / this.limit);
        }
      });
    };

    Pagination.prototype.setValues = function(val) {
      this.values = val;
    };

    Pagination.prototype.inflate = function(jqObj, pageNum) {
      var bar, i, j, k, l, len, len1, m, ref, ref1, ref2, self, startingIdx, table, thisPage, uid;
      if (pageNum < 1 || pageNum > this.maxPage) {
        return;
      }
      startingIdx = this.getStartingIndex(pageNum);
      console.log("Inflating page " + pageNum + ", starting at index " + startingIdx);
      jqObj.empty();
      self = this;
      table = $('<table class="table" id="pagination-table"><thead></thead><tbody></tbody></table>');
      bar = $('<div class="pagination pagination-centered" id="pagination-bar"><ul></ul></div>');
      $(document.body).undelegate('#prev', 'click');
      $(document.body).undelegate('#next', 'click');
      ref = this.pageIds;
      for (k = 0, len = ref.length; k < len; k++) {
        i = ref[k];
        $(document.body).undelegate(i, 'click');
      }
      this.pageIds = [];
      ref1 = this.buttonIds;
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        $(document.body).undelegate(j, 'click');
      }
      this.buttonIds = [];
      table.children('thead').append('<th></th>');
      $.each(this.headerRow, function(idx, e) {
        table.children('thead').append($('<th>').text(e));
      });
      if (Object.keys(this.buttons).length !== 0) {
        table.children('thead').append('<th></th>');
      }
      thisPage = this.values.slice(startingIdx, +(startingIdx + this.limit - 1) + 1 || 9e9);
      uid = 0;
      $.each(thisPage, function(idx, eachObj) {
        var row;
        row = $('<tr>').append('<td><input type="checkbox" class="rowSelect" /></td>');
        row.data('id', eachObj.id);
        row.data('rowData', eachObj.data);
        $.each(eachObj.data, function(idx, eachCell) {
          return row.append($('<td>').text(eachCell));
        });
        $.each(self.buttons, function(name, handler) {
          var buttonId;
          buttonId = "button-" + (uid++);
          row.append("<td><button class=\"btn btn-small\" id=" + buttonId + ">" + name + "</button></td>");
          $(document.body).on('click', "#" + buttonId, function(e) {
            var parentRow;
            e.preventDefault();
            parentRow = $(this).parent().parent();
            handler(parentRow.data('id'), parentRow.data('rowData'));
          });
          self.buttonIds.push("#" + buttonId);
        });
        table.children('tbody').append(row);
      });
      bar.children('ul').append('<li><a href="javascript:void(0);" id="prev">&laquo;</a></li>');
      $(document.body).on('click', '#prev', function(e) {
        e.preventDefault();
        $('#pagination-table').parent().paginate('inflate', pageNum - 1);
      });
      for (i = m = 1, ref2 = this.maxPage; 1 <= ref2 ? m <= ref2 : m >= ref2; i = 1 <= ref2 ? ++m : --m) {
        bar.children("ul").append($("<li>").append("<a href=\"javascript:void(0);\" id=\"to-page-" + i + "\">" + i + "</a>"));
        $(document.body).on('click', "#to-page-" + i, function(e) {
          e.preventDefault();
          $('#pagination-table').parent().paginate('inflate', i);
        });
        self.pageIds.push("#to-page-" + i);
      }
      bar.children('ul').append('<li><a href="javascript:void(0);" id="next">&raquo;</a></li>');
      $(document.body).on('click', '#next', function(e) {
        e.preventDefault();
        $('#pagination-table').parent().paginate('inflate', pageNum + 1);
      });
      $("to-page-" + pageNum).addClass('disabled');
      jqObj.append(table);
      return jqObj.append(bar);
    };

    return Pagination;

  })();

  
$.fn.paginate = function (options) {
	if (typeof(pg) !== "undefined") {
		if (options === "get") {
			return pg;
		}
		else if (options === "inflate") {
			pg.inflate(this, arguments[1]);
			return this;
		}
		else if (options === "setValues") {
			pg.setValues(arguments[1]);
		}
		else {
			return this;
		}
	}
	pg = new Pagination(options);
	pg.inflate(this, 1);
	return this;
};

}).call(this);
